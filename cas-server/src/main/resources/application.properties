##
# CAS Server Context Configuration
#
server.context-path=/cas
server.port=8443

#server.ssl.key-store=file:/etc/cas/thekeystore
#server.ssl.key-store-password=changeit
#server.ssl.key-password=changeit

#关闭https验证
cas.tgc.secure=false
cas.serviceRegistry.initFromJson=true

#允许退出之后重定向页面
cas.logout.followServiceRedirects=true

# server.ssl.ciphers=
# server.ssl.client-auth=
# server.ssl.enabled=
# server.ssl.key-alias=
# server.ssl.key-store-provider=
# server.ssl.key-store-type=
# server.ssl.protocol=
# server.ssl.trust-store=
# server.ssl.trust-store-password=
# server.ssl.trust-store-provider=
# server.ssl.trust-store-type=

server.max-http-header-size=2097152
server.use-forward-headers=true
server.connection-timeout=20000
server.error.include-stacktrace=ALWAYS

server.compression.enabled=true
server.compression.mime-types=application/javascript,application/json,application/xml,text/html,text/xml,text/plain

server.tomcat.max-http-post-size=2097152
server.tomcat.basedir=build/tomcat
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.pattern=%t %a "%r" %s (%D ms)
server.tomcat.accesslog.suffix=.log
server.tomcat.max-threads=10
server.tomcat.port-header=X-Forwarded-Port
server.tomcat.protocol-header=X-Forwarded-Proto
server.tomcat.protocol-header-https-value=https
server.tomcat.remote-ip-header=X-FORWARDED-FOR
server.tomcat.uri-encoding=UTF-8

spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true

##
# CAS Cloud Bus Configuration
#
spring.cloud.bus.enabled=false
# spring.cloud.bus.refresh.enabled=true
# spring.cloud.bus.env.enabled=true
# spring.cloud.bus.destination=CasCloudBus
# spring.cloud.bus.ack.enabled=true

endpoints.enabled=false
endpoints.sensitive=true

endpoints.restart.enabled=false
endpoints.shutdown.enabled=false

management.security.enabled=true
management.security.roles=ACTUATOR,ADMIN
management.security.sessions=if_required
management.context-path=/status
management.add-application-context-header=false

security.basic.authorize-mode=role
security.basic.enabled=false
security.basic.path=/cas/status/**

##
# CAS Web Application Session Configuration
#
server.session.timeout=300
server.session.cookie.http-only=true
server.session.tracking-modes=COOKIE

##
# CAS Thymeleaf View Configuration
#
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=true
spring.thymeleaf.mode=HTML
##
# CAS Log4j Configuration
#
# logging.config=file:/etc/cas/log4j2.xml
server.context-parameters.isLog4jAutoInitializationDisabled=true

##
# CAS AspectJ Configuration
#
spring.aop.auto=true
spring.aop.proxy-target-class=true

## 注销掉
# CAS Authentication Credentials
#
#cas.authn.accept.users=casuser::Mellon


##########################################################JDBC验证##############################################################################
#
##Query Database Authentication 数据库查询校验用户名开始
##查询账号密码sql，必须包含密码字段
##数据库查询用户名语句，其中user_info对应表名，username对应登录账号的字段名
#cas.authn.jdbc.query[0].sql=SELECT * FROM user_info WHERE username =?
##指定上面的sql查询字段名（必须）
#cas.authn.jdbc.query[0].fieldPassword=password
##指定过期字段，1为过期，若过期不可用（可选）
##cas.authn.jdbc.query[0].fieldExpired=expired
##为不可用字段段，1为不可用，需要修改密码（可选）
##cas.authn.jdbc.query[0].fieldDisabled=disabled
##数据库方言hibernate的
#cas.authn.jdbc.query[0].dialect=org.hibernate.dialect.MySQLDialect
##数据库驱动
#cas.authn.jdbc.query[0].driverClass=com.mysql.jdbc.Driver
##数据库连接
#cas.authn.jdbc.query[0].url=jdbc:mysql://192.168.9.223:3306/test?useUnicode=true&characterEncoding=UTF-8
##数据库用户名
#cas.authn.jdbc.query[0].user=root
##数据库密码
#cas.authn.jdbc.query[0].password=ablejava
##默认加密策略，通过encodingAlgorithm来指定算法，默认NONE不加密
##cas.authn.jdbc.query[0].passwordEncoder.type=DEFAULT 自定义加密策略
#cas.authn.jdbc.query[0].passwordEncoder.type=com.cas.passwordEncode.MyEncoder
#cas.authn.jdbc.query[0].passwordEncoder.characterEncoding=UTF-8
#cas.authn.jdbc.query[0].passwordEncoder.encodingAlgorithm=MD5
##Query Database Authentication 数据库查询校验用户名结束
###########################################################JDBC验证 加盐##############################################################################
#
##加密迭代次数
#cas.authn.jdbc.encode[0].numberOfIterations=2
##该列名的值可替代上面的值，但对密码加密时必须取该值进行处理
#cas.authn.jdbc.encode[0].numberOfIterationsFieldName=
##盐值固定列 盐值
#cas.authn.jdbc.encode[0].saltFieldName=username
##静态盐值
#cas.authn.jdbc.encode[0].staticSalt=.
#cas.authn.jdbc.encode[0].sql=SELECT * FROM user_info WHERE username =?
##对处理盐值后的算法
#cas.authn.jdbc.encode[0].algorithmName=MD5
#cas.authn.jdbc.encode[0].passwordFieldName=password
#cas.authn.jdbc.encode[0].expiredFieldName=expired
#cas.authn.jdbc.encode[0].disabledFieldName=disabled
##数据库连接
#cas.authn.jdbc.encode[0].url=jdbc:mysql://192.168.9.223:3306/test?useUnicode=true&characterEncoding=UTF-8
#cas.authn.jdbc.encode[0].dialect=org.hibernate.dialect.MySQL5Dialect
#cas.authn.jdbc.encode[0].driverClass=com.mysql.jdbc.Driver
#cas.authn.jdbc.encode[0].user=root
#cas.authn.jdbc.encode[0].password=ablejava

#注意：如果两种方式都配置的话,默认先用普通MD5验证，如果验证失败，打印异常日志,然后再使用加盐方式验证。

##########################################################Shrio验证##############################################################################
# Shiro Authentication 开始
#允许登录的用户，必须要有以下权限，否则拒绝，多个逗号隔开
#cas.authn.shiro.requiredPermissions=staff
#允许登录的用户，必须要有以下权限，否则拒绝，多个逗号隔开
#cas.authn.shiro.requiredRoles=admin
#shiro配置文件位置
#cas.authn.shiro.config.location=classpath:shiro.ini
#shiro name 唯一
#cas.authn.shiro.name=cas-shiro
# 与Query Authentication一致的加密策略
#cas.authn.shiro.passwordEncoder.type=DEFAULT
# 使用MD5加密
#cas.authn.shiro.passwordEncoder.encodingAlgorithm=MD5
# Shiro Authentication 结束

##########################################################REST 认证##############################################################################
#REST 认证开始
#请求远程调用接口
#cas.authn.rest.uri=http://localhost:8101/login
#加密策略
#cas.authn.rest.passwordEncoder.type=DEFAULT
#cas.authn.rest.passwordEncoder.characterEncoding=UTF-8
#加密算法
#cas.authn.rest.passwordEncoder.encodingAlgorithm=MD5
#REST 结束


#[,...] 多个配置 cas.authn.exceptions.exceptions=[]
#cas.authn.exceptions.exceptions=[com.cas.authentication.AccountCodeException,com.cas.authentication.AccountRoleException]

#设置默认主题 cas5.1.0-cas5.1.6版本无法使用默认主题，需要覆盖
#cas.theme.defaultThemeName=100000


##########################################################spring boot自动配置数据原##############################################################################

#下面所是数据源，让spring boot自动配置，默认cas屏蔽了spring boot自动配置，下面的代码中我们在spring boot扫描的目录中开启这个配置
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://192.168.9.223:3306/test?useUnicode=true&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=ablejava
spring.datasource.type=org.apache.commons.dbcp2.BasicDataSource

spring.jpa.database=mysql
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

#连接池配置
##初始化连接:连接池启动时创建的初始化连接数量
spring.datasource.dbcp2.initial-size=5
#最大活动连接:连接池在同一时间能够分配的最大活动连接的数量, 如果设置为非正数则表示不限制
spring.datasource.dbcp2.max-active=1000
#最大空闲连接:连接池中容许保持空闲状态的最大连接数量,超过的空闲连接将被释放,如果设置为负数表示不限制
spring.datasource.dbcp2.max-idle=100
#从连接池获取一个连接时，最大的等待时间,设置为-1时，如果没有可用连接，连接池会一直无限期等待，直到获取到连接为止。
#如果设置为N（毫秒），则连接池会等待N毫秒，等待不到，则抛出异常
spring.datasource.dbcp2.max-wait-millis=60000
#通过这个池创建连接的默认自动提交状态。如果不设置，则setAutoCommit 方法将不被调用
spring.datasource.dbcp2.default-auto-commit=true
#通过这个池创建连接的默认只读状态。如果不设置，则setReadOnly  方法将不被调用。（部分驱动不支持只读模式，如：Informix）
spring.datasource.dbcp2.default-read-only=false
#指明在从池中租借对象时是否要进行验证有效，如果对象验证失败，则对象将从池子释放，然后我们将尝试租借另一个
spring.datasource.dbcp2.test-on-borrow=true

#自定义属性 这些属性我们在jdbc验证的时候需要
#用户名，密码查询
user.password.query.sql = SELECT * FROM user_info WHERE username =?
#ukey查询
#user.ukey.query.sql = select u.USERID from USERINFO u left join ORGANINFO o on u.USERID=o.RID where u.UKEYSTRING = ?
#系统配置查询（通过系统配置服务获取自定义界面的一些配置信息的sql语句）
#syscfg.query.sql = select SVALUE from SYSKEY where CCATALOG = ? and SKEY = ?























